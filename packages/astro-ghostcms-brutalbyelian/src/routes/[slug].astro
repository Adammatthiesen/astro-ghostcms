---
import BlogPost from "../layouts/Default.astro"
import { getAllPosts, getAllPages, getSettings, invariant } from "@matthiesenxyz/astro-ghostcms/api";
import type { InferGetStaticPropsType } from "astro";
import RecentBlogPosts from "../components/generic/RecentBlogPosts.astro";
import FeatureImage from "../components/generic/Featureimage.astro";
import { formatDate } from "../utils";
import BlogPostHeader from "../components/blog/BlogPostHeader.astro";

export async function getStaticPaths() {
  const [posts, pages, settings] = await Promise.all([getAllPosts(), await getAllPages(), await getSettings()]);
  const allPosts = [...posts, ...pages];
  return allPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post, posts, settings },
  }));
}

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const {post, posts, settings} = Astro.props as Props;
invariant(settings, "Settings are required");
---
<BlogPost title={post.title} description={post.excerpt}>
  <article class='prose-slate w-sm md:w-prose md:prose poppins pl-4'>

  <BlogPostHeader post={post} settings={settings} />

  <Fragment set:html={post.html} />
  </article>
  <section class='p-6'>
    <RecentBlogPosts posts={posts} settings={settings} />
  </section>
</BlogPost>
